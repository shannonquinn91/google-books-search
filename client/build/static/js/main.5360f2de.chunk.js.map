{"version":3,"sources":["components/Input/Input.js","components/Jumbotron/Jumbotron.js","utils/API.js","components/Nav/Nav.js","components/Grid/index.js","components/Input/Button.js","components/Cover/Cover.js","components/BookList/BookList.js","components/Search/Search.js","components/BookList/SavedItem.js","components/Saved/Saved.js","App.js","registerServiceWorker.js","index.js"],"names":["Input","props","className","type","Jumbotron","API","searchBooks","query","axios","get","saveBook","book","post","data","myList","then","res","console","log","Nav","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","onClick","Container","fluid","children","Row","Col","size","split","map","join","Button","Cover","src","role","style","backgroundImage","BookItem","title","author","cover","description","rel","target","marginBottom","BookList","Search","useState","books","setBooks","setQuery","authors","image","link","name","onChange","event","search","value","placeholder","preventDefault","items","catch","err","length","key","volumeInfo","imageLinks","smallThumbnail","previewLink","SavedItem","deleteBook","Saved","saved","setSaved","useEffect","_id","App","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.5360f2de.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Input(props) {\n    return (\n        <div className=\"input-group input-group-lg\">\n            <input className=\"form-control\" type=\"text\" {...props}></input>\n        </div>\n    )\n}\n\nexport default Input;\n\n//","import React from 'react';\nimport './jumbotron.css';\n\nfunction Jumbotron() {\n    return (\n        <div className=\"jumbotron text-center\">\n            <h1>React Google Books Search</h1>\n            <p>Search and save books of interest.</p>\n        </div>\n    )\n}\n\nexport default Jumbotron;","import axios from 'axios';\n\n//const apiKey = axios.get('/APIkey');\n\nconst API = {\n    searchBooks: function(query) {\n        return axios.get(`https://www.googleapis.com/books/v1/volumes?q=${query}&key=AIzaSyDeehm96IVTyladY-nStngaIu5JkGjoN_Y`)\n    },\n\n    saveBook: function(book) {\n        return axios.post('/api/save', {data: book})\n    },\n\n    myList: function() {\n        return axios.get('/api/myList')\n    }\n}\n\nexport default API;","import React from 'react';\nimport './nav.css';\nimport API from '../../utils/API'\n\nconst myList = () => {\n    API.myList()\n        .then(res => console.log(res))\n}\n\n\nfunction Nav() {\n    return(\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <a className=\"navbar-brand\" href='/'>(React) Google Book Search</a>\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            </button>\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav mr-auto\">\n                <li className=\"nav-item active\">\n                    <a className=\"nav-link\" href=\"/\">Search</a>\n                </li>\n                <li className=\"nav-item active\">\n                    <a className=\"nav-link\" href=\"/saved\" onClick={myList}>My List</a>\n                </li>\n            </ul>\n            </div>\n\n        </nav>\n    )\n}\n\nexport default Nav;\n\n","//This file came from activity 2 of week 21 to help set up the grid of the search results\n\nimport React from \"react\";\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n","import React from 'react';\n\nfunction Button({ type = \"default\", className, children, onClick }) {\n    return (\n        <button onClick={onClick} className={[\"btn btn-lg\", `btn-${type}`, className].join(\" \")}>\n            {children}\n        </button>\n    )\n}\n\nexport default Button;","import React from \"react\";\nimport './cover.css';\n\n// The Thumbnail component renders a div that uses some CSS to render a background image\n// It will always keep square proportions at any size without the image warping\n// The \"role\" and \"aria label\" are there to identify the element's purpose as an image for accessibility purposes\nfunction Cover({ src }) {\n  return (\n    <div\n      className=\"cover\"\n      role=\"img\"\n      aria-label=\"Cover Image\"\n      style={{\n        backgroundImage: `url(${src})`\n      }}\n    />\n  );\n}\n\nexport default Cover;","import React from 'react';\nimport {Container, Row, Col} from '../Grid';\nimport Cover from '../Cover/Cover';\n\n//Created a book list (container) and book item (for displaying book data)\n\nexport function BookList({children}) {\n    return <ul className=\"list-group\">{children}</ul>\n}\n\nexport function BookItem({title, author, cover, description, href, saveBook}) {\n    return (\n        <li className=\"list-group-item\">\n            <Container>\n                <Row>\n                    <Col size=\"xs-4 sm-2\">\n                        <h3>{title}</h3>\n                        <p>by: {author}</p>\n                        <Cover src={cover || \"https://placehold.it/300x300\"} />\n                    </Col>\n                    <Col size=\"xs-8 sm-9\">\n                        <p>{description}</p>\n                    </Col>\n                    <Col size=\"xs-2 sm-1\">\n                        <a  rel=\"noopener noreferrer\" target=\"_blank\" href={href} style={{marginBottom: \".5rem\"}} type=\"button\" className=\"btn btn-info\">View on Google Books</a>\n                        <button onClick={() => saveBook(title, author, cover, description, href)} type=\"button\" className=\"btn btn-primary\">Save to My List</button>\n                    </Col>\n                </Row>\n            </Container>\n        </li>\n    )\n}\n\nexport default BookList;","import React, {useState} from 'react';\nimport Input from '../Input/Input';\nimport Jumbotron from '../Jumbotron/Jumbotron';\nimport Nav from '../Nav/Nav';\nimport API from '../../utils/API';\nimport {Container, Row, Col} from '../Grid';\nimport Button from '../Input/Button';\nimport { BookItem } from '../BookList/BookList';\nimport BookList from '../BookList/BookList';\n\nfunction Search() {\n    const [books, setBooks] = useState([]);\n    const [query, setQuery] = useState(\"\");\n\n    const handleInputChange = event => {\n        const search = event.target.value;\n        //console.log(search)\n        //const searchFormat = search.split(\" \").join(\"+\");\n        setQuery(search);\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        //console.log(query)\n        API.searchBooks(query)\n            .then(res => setBooks(res.data.items))\n            .catch(err => console.log(err)); \n            \n    }\n\n    const saveBook = (title, author, cover, description, href) => {\n        API.saveBook({\n            title,\n            authors: author,\n            description,\n            image: cover,\n            link: href\n        })       \n    }\n\n    return (\n        <div className=\"App\">\n        <Nav />\n            <div className=\"App-header\">\n                <Jumbotron />\n               <Container>\n                   <Row>\n                       <Col size=\"12\">\n                       <form>\n                        <Container>\n                            <Row>\n                                <Col size=\"xs-9 sm-10\">\n                                    <Input \n                                    name=\"bookSearch\"\n                                    onChange={handleInputChange}\n                                    value={query}\n                                    placeholder=\"Search for a book\"\n                                    />\n                                </Col>\n                                <Col size=\"xs-3 sm-2\">\n                                    <Button\n                                    onClick={handleSubmit}\n                                    type=\"success\"\n                                    className=\"input-lg\">\n                                        Search\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Container>\n                       </form>\n                       </Col>\n                   </Row>\n                   <br></br>\n                   <Row>\n                       <Col size=\"xs-12\">\n                           {!books.length ? (\n                               <h1 className=\"text-center\">No Books Found</h1>\n                           ) : (\n                               <BookList>\n                                   {books.map(book => {\n                                       return (\n                                           <BookItem\n                                            key={book.id}\n                                            title={book.volumeInfo.title}\n                                            author={book.volumeInfo.authors}\n                                            cover={book.volumeInfo.imageLinks && book.volumeInfo.imageLinks.smallThumbnail}\n                                            description={book.volumeInfo.description}\n                                            href={book.volumeInfo.previewLink}\n                                            onClick={saveBook}\n                                            />\n                                       )\n                                   })}\n                               </BookList>\n                           )\n                        }\n                       </Col>\n                   </Row>\n               </Container>\n            </div>\n        </div>\n    )\n}\n\nexport default Search;","import React from 'react';\nimport {Container, Row, Col} from '../Grid';\nimport Cover from '../Cover/Cover';\n\nfunction SavedItem({title, author, cover, description, href, deleteBook}) {\n    return (\n        <li className=\"list-group-item\">\n            <Container>\n                <Row>\n                    <Col size=\"xs-4 sm-2\">\n                        <h3>{title}</h3>\n                        <p>by: {author}</p>\n                        <Cover src={cover || \"https://placehold.it/300x300\"} />\n                    </Col>\n                    <Col size=\"xs-8 sm-9\">\n                        <p>{description}</p>\n                    </Col>\n                    <Col size=\"xs-2 sm-1\">\n                        <a  rel=\"noopener noreferrer\" target=\"_blank\" href={href} style={{marginBottom: \".5rem\"}} type=\"button\" className=\"btn btn-info\">View on Google Books</a>\n                        <button onClick={deleteBook} type=\"button\" className=\"btn btn-primary\">Delete from My List</button>\n\n                    </Col>\n                </Row>\n            </Container>\n        </li>\n    )\n}\n\nexport default SavedItem;","import React, {useEffect, useState} from 'react';\nimport Jumbotron from '../Jumbotron/Jumbotron';\nimport Nav from '../Nav/Nav';\nimport {Container, Row, Col} from '../Grid';\n//import { BookItem } from '../BookList/BookList';\nimport BookList from '../BookList/BookList';\nimport API from '../../utils/API';\nimport SavedItem from '../BookList/SavedItem';\n\n\nfunction Saved() {\n    const [saved, setSaved] = useState([]);\n\n    useEffect(() => {\n        API.myList()\n            .then(res => setSaved(res.data))\n            .catch(err => console.log(err))\n    }, [])\n    \n\n    const deleteBook = () => {\n        console.log(\"working\")\n    }\n    \n    return (\n        <div className=\"App\">\n        <Nav />\n            <div className=\"App-header\">\n                <Jumbotron />\n               <Container>\n                   <Row>\n                       <Col size=\"xs-12\">\n                           {saved.length ? (\n                               <h1 className=\"text-center\">You have no saved books in your list.</h1>\n                           ) : (\n                               <BookList>\n                                   {saved.map(book => {\n                                       return(\n                                           <SavedItem\n                                            key={book._id}\n                                            title={book.title}\n                                            author={book.authors}\n                                            cover={book.image}\n                                            description={book.description}\n                                            href={book.link}\n                                            onClick={deleteBook}\n                                            />\n                                       )\n                                   })}\n                                </BookList>\n                           )\n                               \n                           }\n                                   \n                       </Col>\n                   </Row>\n               </Container>\n            </div>\n        </div>\n    )\n\n}\n\nexport default Saved;","import React from \"react\";\nimport \"./App.css\";\nimport Search from \"./components/Search/Search\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Saved from \"./components/Saved/Saved\"\n//<Route exact path=\"/saved\" component={Saved} />\n\nfunction App() {\n  return (\n    <Router>\n    <div className=\"App\">\n      <div className=\"App-header\">\n        <Route exact path=\"/\" component={Search} />\n        <Route exact path=\"/saved\" component={Saved} />\n      </div>\n    </div>\n      \n    </Router>\n    \n  );\n}\n\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}